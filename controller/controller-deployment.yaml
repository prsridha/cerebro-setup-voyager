# Controller Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.user.username }}-cerebro-controller
  namespace: default
  labels:
        app: cerebro-controller
        type: controller
        user: {{ .Values.user.username }}
spec:
  selector:
    matchLabels:
      app: cerebro-controller
      type: controller
      user: {{ .Values.user.username }}
  replicas: 1
  template:
    metadata:
      labels:
        app: cerebro-controller
        type: controller
        user: {{ .Values.user.username }}
    spec:
      hostname: controller
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - vgr-10-02
      serviceAccountName: {{ .Values.user.username }}
      initContainers:
      - name: git-sync-cerebro
        image: {{ .Values.controller.git.gitSyncImage }}
        imagePullPolicy: Always
        volumeMounts:
        - name: cerebro-repo
          mountPath: {{ .Values.controller.volumes.cerebroRepoMountPath }}
        env:
        - name: GIT_SYNC_DIR
          value: cerebro-kube
        - name: GIT_SYNC_REPO
          value: {{ .Values.controller.git.cerebroRepoURL }}
        - name: GIT_SYNC_BRANCH
          value: {{ .Values.controller.git.cerebroRepoBranch }}
        - name: GIT_SYNC_ROOT
          value: {{ .Values.controller.volumes.cerebroRepoMountPath }}
        - name: GIT_SYNC_SERVER
          value: {{ .Values.creds.gitServer }}
        securityContext:
          runAsUser: 0
      containers:
      - name: controller
        image: {{ .Values.controller.git.image }}
        imagePullPolicy: Always
        command: [ "/bin/bash", "/cerebro-repo/cerebro-kube/init.sh"]
        workingDir: /cerebro-repo/cerebro-kube
        env:
        - name: RPC_PORT
          value: "{{ .Values.worker.rpcPort }}"
        - name: ML_METRICS_LOGDIR
          value: {{ .Values.controller.volumes.metricsMountPath }}
        volumeMounts:
        - name: cerebro-repo
          mountPath: {{ .Values.controller.volumes.cerebroRepoPath }}
        - name: user-repo
          mountPath: {{ .Values.controller.volumes.userRepoPath }}
        - name: checkpoint-storage
          mountPath: {{ .Values.controller.volumes.checkpointPath }}
        - name: data-storage
          mountPath: {{ .Values.controller.volumes.dataPath }}
        - name: metrics-storage
          mountPath: {{ .Values.controller.volumes.metricsPath }}
        ports:
        - containerPort: {{ .Values.controller.services.jupyterPort }}
          name: jupyter-port
        - containerPort: {{ .Values.controller.services.tensorboardPort }}
          name: tnsrbrd-port
      volumes:
      - name: cerebro-repo
        hostPath:
          path: /voyager/ceph/users/{{ .Values.user.username }}/{{ .Values.controller.volumes.cerebroRepoPath }}
          type: Directory
      - name: user-repo
        hostPath:
          path: /voyager/ceph/users/{{ .Values.user.username }}/{{ .Values.controller.volumes.userRepoPath }}
          type: Directory
      - name: checkpoint-storage
        hostPath:
          path: /voyager/ceph/users/{{ .Values.user.username }}/{{ .Values.controller.volumes.checkpointPath }}
          type: Directory
      - name: metrics-storage
        hostPath:
          path: /voyager/ceph/users/{{ .Values.user.username }}/{{ .Values.controller.volumes.metricsMountPath }}
          type: Directory
      - name: data-storage
        hostPath:
          path: /voyager/ceph/users/{{ .Values.user.username }}/{{ .Values.controller.volumes.dataPath }}
          type: Directory
