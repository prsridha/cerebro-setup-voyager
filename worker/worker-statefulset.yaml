# Worker StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.user.username }}-cerebro-worker
  namespace: default
spec:
  podManagementPolicy: Parallel
  serviceName: {{ .Values.user.username }}-workersvc
  replicas: {{ .Values.cluster.numWorkers }}
  selector:
    matchLabels:
      app: cerebro-worker
      user: {{ .Values.user.username }}
  template:
    metadata:
      labels:
        app: cerebro-worker
        user: {{ .Values.user.username }}
    spec:
      hostname: $WORKER_ID_SELF
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: brightcomputing.com/node-category
                operator: In
                values:
                - gaudi
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - cerebro-controller
                - cerebro-worker
            topologyKey: "kubernetes.io/hostname"
      serviceAccountName: {{ .Values.user.username }}
      containers:
      - name: etl-container
        image: {{ .Values.controller.git.image }}
        imagePullPolicy: Always
        command: [ "/bin/bash", "/cerebro-repo/cerebro-core/etl/run_etl.sh" ]
        workingDir: /cerebro-repo/cerebro-core
        env:
          - name: WORKER_ID_SELF
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_TYPE
            value: "etl"
        volumeMounts:
        - name: cerebro-repo
          mountPath: {{ .Values.controller.volumes.cerebroRepoPath }}
        - name: user-repo
          mountPath: {{ .Values.controller.volumes.userRepoPath }}
        - name: data-storage-worker
          subPathExpr: $(WORKER_ID_SELF)
          mountPath: {{ .Values.worker.workerDataPath }}
        - name: data-storage
          mountPath: {{ .Values.controller.volumes.dataPath }}
      - name: mop-container
        image: {{ .Values.controller.git.image }}
        imagePullPolicy: Always
        command: [ "/bin/bash", "/cerebro-repo/cerebro-core/mop/run_mop.sh"]
        workingDir: /cerebro-repo/cerebro-core
        resources:
          limits:
            habana.ai/gaudi: 4
            hugepages-2Mi: 1900Mi
            memory: 32G
            cpu: 1
          requests:
            memory: 32G
            cpu: 1
        ports:
          - containerPort: {{ .Values.worker.rpcPort }}
        env:
        - name: WORKER_ID_SELF
          valueFrom:
              fieldRef:
                fieldPath: metadata.name
        - name: POD_TYPE
          value: "mop"
        volumeMounts:
        - name: dshm
          mountPath: /dev/shm
        - name: cerebro-repo
          mountPath: {{ .Values.controller.volumes.cerebroRepoPath }}
        - name: user-repo
          mountPath: {{ .Values.controller.volumes.userRepoPath }}
        - name: data-storage-worker
          subPathExpr: $(WORKER_ID_SELF)
          mountPath: {{ .Values.worker.workerDataPath }}
        - name: checkpoint-storage
          mountPath: {{ .Values.controller.volumes.checkpointPath }}
        - name: data-storage
          mountPath: {{ .Values.controller.volumes.dataPath }}
        - name: metrics-storage
          mountPath: {{ .Values.controller.volumes.metricsPath }}
      volumes:
      - name: cerebro-repo
        hostPath:
          path: /voyager/ceph/users/{{ .Values.user.username }}/volumes{{ .Values.controller.volumes.cerebroRepoPath }}
          type: DirectoryOrCreate
      - name: user-repo
        hostPath:
          path: /voyager/ceph/users/{{ .Values.user.username }}/volumes{{ .Values.controller.volumes.userRepoPath }}
          type: DirectoryOrCreate
      - name: checkpoint-storage
        hostPath:
          path: /voyager/ceph/users/{{ .Values.user.username }}/volumes{{ .Values.controller.volumes.checkpointPath }}
          type: DirectoryOrCreate
      - name: metrics-storage
        hostPath:
          path: /voyager/ceph/users/{{ .Values.user.username }}/volumes{{ .Values.controller.volumes.metricsMountPath }}
          type: DirectoryOrCreate
      - name: data-storage
        hostPath:
          path: /voyager/ceph/users/{{ .Values.user.username }}/volumes{{ .Values.controller.volumes.dataPath }}
          type: DirectoryOrCreate
      - name: data-storage-worker
        hostPath:
          path: /voyager/ceph/users/{{ .Values.user.username }}/volumes/worker_storage
          type: DirectoryOrCreate
      - name: dshm
        emptyDir:
          medium: Memory